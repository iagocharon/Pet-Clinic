{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default from 'moment';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar moment = _rollupMoment__default || _rollupMoment;\n/** InjectionToken for moment date adapter to configure options. */\n\nvar MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n  return {\n    useUtc: false\n  };\n}\n/** Creates an array and fills it with values. */\n\n\nfunction range(length, valueFunction) {\n  var valuesArray = Array(length);\n\n  for (var i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n\n  return valuesArray;\n}\n/** Adapts Moment.js Dates for use with Angular Material. */\n\n\nvar MomentDateAdapter = /*#__PURE__*/function (_DateAdapter) {\n  _inherits(MomentDateAdapter, _DateAdapter);\n\n  var _super = _createSuper(MomentDateAdapter);\n\n  function MomentDateAdapter(dateLocale, _options) {\n    var _this;\n\n    _classCallCheck(this, MomentDateAdapter);\n\n    _this = _super.call(this);\n    _this._options = _options;\n\n    _this.setLocale(dateLocale || moment.locale());\n\n    return _this;\n  }\n\n  _createClass(MomentDateAdapter, [{\n    key: \"setLocale\",\n    value: function setLocale(locale) {\n      var _this2 = this;\n\n      _get(_getPrototypeOf(MomentDateAdapter.prototype), \"setLocale\", this).call(this, locale);\n\n      var momentLocaleData = moment.localeData(locale);\n      this._localeData = {\n        firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n        longMonths: momentLocaleData.months(),\n        shortMonths: momentLocaleData.monthsShort(),\n        dates: range(31, function (i) {\n          return _this2.createDate(2017, 0, i + 1).format('D');\n        }),\n        longDaysOfWeek: momentLocaleData.weekdays(),\n        shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n        narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n      };\n    }\n  }, {\n    key: \"getYear\",\n    value: function getYear(date) {\n      return this.clone(date).year();\n    }\n  }, {\n    key: \"getMonth\",\n    value: function getMonth(date) {\n      return this.clone(date).month();\n    }\n  }, {\n    key: \"getDate\",\n    value: function getDate(date) {\n      return this.clone(date).date();\n    }\n  }, {\n    key: \"getDayOfWeek\",\n    value: function getDayOfWeek(date) {\n      return this.clone(date).day();\n    }\n  }, {\n    key: \"getMonthNames\",\n    value: function getMonthNames(style) {\n      // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n      return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n  }, {\n    key: \"getDateNames\",\n    value: function getDateNames() {\n      return this._localeData.dates;\n    }\n  }, {\n    key: \"getDayOfWeekNames\",\n    value: function getDayOfWeekNames(style) {\n      if (style == 'long') {\n        return this._localeData.longDaysOfWeek;\n      }\n\n      if (style == 'short') {\n        return this._localeData.shortDaysOfWeek;\n      }\n\n      return this._localeData.narrowDaysOfWeek;\n    }\n  }, {\n    key: \"getYearName\",\n    value: function getYearName(date) {\n      return this.clone(date).format('YYYY');\n    }\n  }, {\n    key: \"getFirstDayOfWeek\",\n    value: function getFirstDayOfWeek() {\n      return this._localeData.firstDayOfWeek;\n    }\n  }, {\n    key: \"getNumDaysInMonth\",\n    value: function getNumDaysInMonth(date) {\n      return this.clone(date).daysInMonth();\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(date) {\n      return date.clone().locale(this.locale);\n    }\n  }, {\n    key: \"createDate\",\n    value: function createDate(year, month, date) {\n      // Moment.js will create an invalid date if any of the components are out of bounds, but we\n      // explicitly check each case so we can throw more descriptive errors.\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (month < 0 || month > 11) {\n          throw Error(\"Invalid month index \\\"\".concat(month, \"\\\". Month index has to be between 0 and 11.\"));\n        }\n\n        if (date < 1) {\n          throw Error(\"Invalid date \\\"\".concat(date, \"\\\". Date has to be greater than 0.\"));\n        }\n      }\n\n      var result = this._createMoment({\n        year: year,\n        month: month,\n        date: date\n      }).locale(this.locale); // If the result isn't valid, the date must have been out of bounds for this month.\n\n\n      if (!result.isValid() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(\"Invalid date \\\"\".concat(date, \"\\\" for month with index \\\"\").concat(month, \"\\\".\"));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"today\",\n    value: function today() {\n      return this._createMoment().locale(this.locale);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(value, parseFormat) {\n      if (value && typeof value == 'string') {\n        return this._createMoment(value, parseFormat, this.locale);\n      }\n\n      return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n  }, {\n    key: \"format\",\n    value: function format(date, displayFormat) {\n      date = this.clone(date);\n\n      if (!this.isValid(date) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('MomentDateAdapter: Cannot format invalid date.');\n      }\n\n      return date.format(displayFormat);\n    }\n  }, {\n    key: \"addCalendarYears\",\n    value: function addCalendarYears(date, years) {\n      return this.clone(date).add({\n        years: years\n      });\n    }\n  }, {\n    key: \"addCalendarMonths\",\n    value: function addCalendarMonths(date, months) {\n      return this.clone(date).add({\n        months: months\n      });\n    }\n  }, {\n    key: \"addCalendarDays\",\n    value: function addCalendarDays(date, days) {\n      return this.clone(date).add({\n        days: days\n      });\n    }\n  }, {\n    key: \"toIso8601\",\n    value: function toIso8601(date) {\n      return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     */\n\n  }, {\n    key: \"deserialize\",\n    value: function deserialize(value) {\n      var date;\n\n      if (value instanceof Date) {\n        date = this._createMoment(value).locale(this.locale);\n      } else if (this.isDateInstance(value)) {\n        // Note: assumes that cloning also sets the correct locale.\n        return this.clone(value);\n      }\n\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        }\n\n        date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n      }\n\n      if (date && this.isValid(date)) {\n        return this._createMoment(date).locale(this.locale);\n      }\n\n      return _get(_getPrototypeOf(MomentDateAdapter.prototype), \"deserialize\", this).call(this, value);\n    }\n  }, {\n    key: \"isDateInstance\",\n    value: function isDateInstance(obj) {\n      return moment.isMoment(obj);\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid(date) {\n      return this.clone(date).isValid();\n    }\n  }, {\n    key: \"invalid\",\n    value: function invalid() {\n      return moment.invalid();\n    }\n    /** Creates a Moment instance while respecting the current UTC settings. */\n\n  }, {\n    key: \"_createMoment\",\n    value: function _createMoment(date, format, locale) {\n      var _ref = this._options || {},\n          strict = _ref.strict,\n          useUtc = _ref.useUtc;\n\n      return useUtc ? moment.utc(date, format, locale, strict) : moment(date, format, locale, strict);\n    }\n  }]);\n\n  return MomentDateAdapter;\n}(DateAdapter);\n\nMomentDateAdapter.ɵfac = function MomentDateAdapter_Factory(t) {\n  return new (t || MomentDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8), i0.ɵɵinject(MAT_MOMENT_DATE_ADAPTER_OPTIONS, 8));\n};\n\nMomentDateAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MomentDateAdapter,\n  factory: MomentDateAdapter.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDateAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_DATE_LOCALE]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar MAT_MOMENT_DATE_FORMATS = {\n  parse: {\n    dateInput: 'l'\n  },\n  display: {\n    dateInput: 'l',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY'\n  }\n};\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar MomentDateModule = /*#__PURE__*/_createClass(function MomentDateModule() {\n  _classCallCheck(this, MomentDateModule);\n});\n\nMomentDateModule.ɵfac = function MomentDateModule_Factory(t) {\n  return new (t || MomentDateModule)();\n};\n\nMomentDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MomentDateModule\n});\nMomentDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: DateAdapter,\n    useClass: MomentDateAdapter,\n    deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n  }]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MomentDateModule, [{\n    type: NgModule,\n    args: [{\n      providers: [{\n        provide: DateAdapter,\n        useClass: MomentDateAdapter,\n        deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n      }]\n    }]\n  }], null, null);\n})();\n\nvar MatMomentDateModule = /*#__PURE__*/_createClass(function MatMomentDateModule() {\n  _classCallCheck(this, MatMomentDateModule);\n});\n\nMatMomentDateModule.ɵfac = function MatMomentDateModule_Factory(t) {\n  return new (t || MatMomentDateModule)();\n};\n\nMatMomentDateModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MatMomentDateModule\n});\nMatMomentDateModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: MAT_DATE_FORMATS,\n    useValue: MAT_MOMENT_DATE_FORMATS\n  }],\n  imports: [MomentDateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatMomentDateModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MomentDateModule],\n      providers: [{\n        provide: MAT_DATE_FORMATS,\n        useValue: MAT_MOMENT_DATE_FORMATS\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };","map":{"version":3,"names":["i0","InjectionToken","Injectable","Optional","Inject","NgModule","DateAdapter","MAT_DATE_LOCALE","MAT_DATE_FORMATS","_rollupMoment","_rollupMoment__default","moment","MAT_MOMENT_DATE_ADAPTER_OPTIONS","providedIn","factory","MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY","useUtc","range","length","valueFunction","valuesArray","Array","i","MomentDateAdapter","dateLocale","_options","setLocale","locale","momentLocaleData","localeData","_localeData","firstDayOfWeek","longMonths","months","shortMonths","monthsShort","dates","createDate","format","longDaysOfWeek","weekdays","shortDaysOfWeek","weekdaysShort","narrowDaysOfWeek","weekdaysMin","date","clone","year","month","day","style","daysInMonth","ngDevMode","Error","result","_createMoment","isValid","value","parseFormat","displayFormat","years","add","days","Date","isDateInstance","ISO_8601","obj","isMoment","invalid","strict","utc","ɵfac","ɵprov","type","undefined","decorators","args","MAT_MOMENT_DATE_FORMATS","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","MomentDateModule","ɵmod","ɵinj","provide","useClass","deps","providers","MatMomentDateModule","useValue","imports"],"sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@angular/material-moment-adapter/fesm2015/material-moment-adapter.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, NgModule } from '@angular/core';\nimport { DateAdapter, MAT_DATE_LOCALE, MAT_DATE_FORMATS } from '@angular/material/core';\nimport * as _rollupMoment from 'moment';\nimport _rollupMoment__default from 'moment';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst moment = _rollupMoment__default || _rollupMoment;\n/** InjectionToken for moment date adapter to configure options. */\nconst MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken('MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY() {\n    return {\n        useUtc: false,\n    };\n}\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts Moment.js Dates for use with Angular Material. */\nclass MomentDateAdapter extends DateAdapter {\n    constructor(dateLocale, _options) {\n        super();\n        this._options = _options;\n        this.setLocale(dateLocale || moment.locale());\n    }\n    setLocale(locale) {\n        super.setLocale(locale);\n        let momentLocaleData = moment.localeData(locale);\n        this._localeData = {\n            firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n            longMonths: momentLocaleData.months(),\n            shortMonths: momentLocaleData.monthsShort(),\n            dates: range(31, i => this.createDate(2017, 0, i + 1).format('D')),\n            longDaysOfWeek: momentLocaleData.weekdays(),\n            shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n            narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n        };\n    }\n    getYear(date) {\n        return this.clone(date).year();\n    }\n    getMonth(date) {\n        return this.clone(date).month();\n    }\n    getDate(date) {\n        return this.clone(date).date();\n    }\n    getDayOfWeek(date) {\n        return this.clone(date).day();\n    }\n    getMonthNames(style) {\n        // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n        return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n    }\n    getDateNames() {\n        return this._localeData.dates;\n    }\n    getDayOfWeekNames(style) {\n        if (style == 'long') {\n            return this._localeData.longDaysOfWeek;\n        }\n        if (style == 'short') {\n            return this._localeData.shortDaysOfWeek;\n        }\n        return this._localeData.narrowDaysOfWeek;\n    }\n    getYearName(date) {\n        return this.clone(date).format('YYYY');\n    }\n    getFirstDayOfWeek() {\n        return this._localeData.firstDayOfWeek;\n    }\n    getNumDaysInMonth(date) {\n        return this.clone(date).daysInMonth();\n    }\n    clone(date) {\n        return date.clone().locale(this.locale);\n    }\n    createDate(year, month, date) {\n        // Moment.js will create an invalid date if any of the components are out of bounds, but we\n        // explicitly check each case so we can throw more descriptive errors.\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        const result = this._createMoment({ year, month, date }).locale(this.locale);\n        // If the result isn't valid, the date must have been out of bounds for this month.\n        if (!result.isValid() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return this._createMoment().locale(this.locale);\n    }\n    parse(value, parseFormat) {\n        if (value && typeof value == 'string') {\n            return this._createMoment(value, parseFormat, this.locale);\n        }\n        return value ? this._createMoment(value).locale(this.locale) : null;\n    }\n    format(date, displayFormat) {\n        date = this.clone(date);\n        if (!this.isValid(date) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('MomentDateAdapter: Cannot format invalid date.');\n        }\n        return date.format(displayFormat);\n    }\n    addCalendarYears(date, years) {\n        return this.clone(date).add({ years });\n    }\n    addCalendarMonths(date, months) {\n        return this.clone(date).add({ months });\n    }\n    addCalendarDays(date, days) {\n        return this.clone(date).add({ days });\n    }\n    toIso8601(date) {\n        return this.clone(date).format();\n    }\n    /**\n     * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n     * string into null. Returns an invalid date for all other values.\n     */\n    deserialize(value) {\n        let date;\n        if (value instanceof Date) {\n            date = this._createMoment(value).locale(this.locale);\n        }\n        else if (this.isDateInstance(value)) {\n            // Note: assumes that cloning also sets the correct locale.\n            return this.clone(value);\n        }\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n        }\n        if (date && this.isValid(date)) {\n            return this._createMoment(date).locale(this.locale);\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return moment.isMoment(obj);\n    }\n    isValid(date) {\n        return this.clone(date).isValid();\n    }\n    invalid() {\n        return moment.invalid();\n    }\n    /** Creates a Moment instance while respecting the current UTC settings. */\n    _createMoment(date, format, locale) {\n        const { strict, useUtc } = this._options || {};\n        return useUtc ? moment.utc(date, format, locale, strict) : moment(date, format, locale, strict);\n    }\n}\nMomentDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: MAT_MOMENT_DATE_ADAPTER_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nMomentDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_LOCALE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_MOMENT_DATE_FORMATS = {\n    parse: {\n        dateInput: 'l',\n    },\n    display: {\n        dateInput: 'l',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MomentDateModule {\n}\nMomentDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMomentDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateModule });\nMomentDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateModule, providers: [\n        {\n            provide: DateAdapter,\n            useClass: MomentDateAdapter,\n            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n        },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MomentDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        {\n                            provide: DateAdapter,\n                            useClass: MomentDateAdapter,\n                            deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS],\n                        },\n                    ],\n                }]\n        }] });\nclass MatMomentDateModule {\n}\nMatMomentDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMomentDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatMomentDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMomentDateModule, imports: [MomentDateModule] });\nMatMomentDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMomentDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }], imports: [MomentDateModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.0.1\", ngImport: i0, type: MatMomentDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MomentDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY, MAT_MOMENT_DATE_FORMATS, MatMomentDateModule, MomentDateAdapter, MomentDateModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}