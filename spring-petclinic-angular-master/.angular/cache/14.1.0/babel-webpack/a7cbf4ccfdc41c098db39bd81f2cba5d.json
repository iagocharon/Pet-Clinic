{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { PetService } from '../pet.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PetTypeService } from '../../pettypes/pettype.service';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../pet.service\";\nimport * as i2 from \"../../pettypes/pettype.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/datepicker\";\n\nfunction PetEditComponent_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var type_r3 = ctx.$implicit;\n    var ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selected\", type_r3.id == ctx_r2.currentType.id ? true : null)(\"ngValue\", type_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", type_r3.name, \" \");\n  }\n}\n\nexport var PetEditComponent = /*#__PURE__*/function () {\n  function PetEditComponent(petService, petTypeService, router, route) {\n    _classCallCheck(this, PetEditComponent);\n\n    this.petService = petService;\n    this.petTypeService = petTypeService;\n    this.router = router;\n    this.route = route;\n    this.pet = {};\n    this.currentOwner = {};\n    this.currentType = {};\n    this.petTypes = [];\n  }\n\n  _createClass(PetEditComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.petTypeService.getPetTypes().subscribe(function (pettypes) {\n        return _this.petTypes = pettypes;\n      }, function (error) {\n        return _this.errorMessage = error;\n      });\n      var petId = this.route.snapshot.params.id;\n      this.petService.getPetById(petId).subscribe(function (pet) {\n        _this.pet = pet;\n        _this.currentOwner = _this.pet.owner;\n        _this.currentType = _this.pet.type;\n      }, function (error) {\n        return _this.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(pet) {\n      var _this2 = this;\n\n      pet.type = this.currentType;\n      var that = this; // format output from datepicker to short string yyyy/mm/dd format\n\n      pet.birthDate = moment(pet.birthDate).format('YYYY/MM/DD');\n      this.petService.updatePet(pet.id.toString(), pet).subscribe(function (res) {\n        return _this2.gotoOwnerDetail(_this2.currentOwner);\n      }, function (error) {\n        return _this2.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"gotoOwnerDetail\",\n    value: function gotoOwnerDetail(owner) {\n      this.router.navigate(['/owners', owner.id]);\n    }\n  }]);\n\n  return PetEditComponent;\n}();\n\nPetEditComponent.ɵfac = function PetEditComponent_Factory(t) {\n  return new (t || PetEditComponent)(i0.ɵɵdirectiveInject(i1.PetService), i0.ɵɵdirectiveInject(i2.PetTypeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\n\nPetEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PetEditComponent,\n  selectors: [[\"app-pet-edit\"]],\n  inputs: {\n    currentType: \"currentType\"\n  },\n  decls: 45,\n  vars: 14,\n  consts: [[1, \"container-fluid\"], [1, \"container\", \"xd-container\"], [1, \"form-horizontal\", 3, \"ngSubmit\"], [\"petForm\", \"ngForm\"], [\"hidden\", \"true\", 1, \"form-group\"], [\"type\", \"text\", \"hidden\", \"true\", \"id\", \"id\", \"name\", \"id\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"hidden\", \"true\", \"id\", \"owner\", \"name\", \"owner\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\"], [\"for\", \"owner\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [\"id\", \"owner_name\", \"name\", \"owner_name\", \"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [\"for\", \"name\", 1, \"col-sm-2\", \"control-label\"], [\"id\", \"name\", \"name\", \"name\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-2\", \"control-label\"], [\"matInput\", \"\", \"name\", \"birthDate\", 3, \"matDatepicker\", \"ngModel\"], [\"matSuffix\", \"\", 3, \"for\"], [\"birthDateDatepicker\", \"\"], [1, \"control-group\"], [\"for\", \"type\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-2\"], [\"id\", \"type1\", \"name\", \"type1\", \"type\", \"text\", \"readonly\", \"\", 1, \"form-control\", 3, \"value\"], [1, \"col-sm-8\"], [\"id\", \"type\", \"name\", \"type\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [3, \"selected\", \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\"], [3, \"selected\", \"ngValue\"]],\n  template: function PetEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r4 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \" Pet \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function PetEditComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r4);\n\n        var _r0 = i0.ɵɵreference(5);\n\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PetEditComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.pet.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PetEditComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.pet.owner = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Owner\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 9);\n      i0.ɵɵelement(13, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"br\");\n      i0.ɵɵelementStart(15, \"div\", 7)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 9)(19, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function PetEditComponent_Template_input_ngModelChange_19_listener($event) {\n        return ctx.pet.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 13);\n      i0.ɵɵtext(22, \"Birth Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 14);\n      i0.ɵɵpipe(24, \"date\");\n      i0.ɵɵelement(25, \"mat-datepicker-toggle\", 15)(26, \"mat-datepicker\", null, 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 17)(29, \"div\", 7)(30, \"label\", 18);\n      i0.ɵɵtext(31, \"Type \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 9)(33, \"div\", 19);\n      i0.ɵɵelement(34, \"input\", 20);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"div\", 21)(36, \"select\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function PetEditComponent_Template_select_ngModelChange_36_listener($event) {\n        return ctx.currentType = $event;\n      });\n      i0.ɵɵtemplate(37, PetEditComponent_option_37_Template, 2, 3, \"option\", 23);\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(38, \"div\", 7)(39, \"div\", 24);\n      i0.ɵɵelement(40, \"br\");\n      i0.ɵɵelementStart(41, \"button\", 25);\n      i0.ɵɵlistener(\"click\", function PetEditComponent_Template_button_click_41_listener() {\n        return ctx.gotoOwnerDetail(ctx.pet.owner);\n      });\n      i0.ɵɵtext(42, \"< Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(43, \"button\", 26);\n      i0.ɵɵtext(44, \"Update Pet\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      var _r1 = i0.ɵɵreference(27);\n\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.pet.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.pet.owner);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate2(\"value\", \"\", ctx.currentOwner.firstName, \" \", ctx.currentOwner.lastName, \"\");\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.pet.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"matDatepicker\", _r1)(\"ngModel\", i0.ɵɵpipeBind2(24, 11, ctx.pet.birthDate, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"for\", _r1);\n      i0.ɵɵadvance(9);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.currentType.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.currentType);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.petTypes);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i6.MatDatepicker, i6.MatDatepickerInput, i6.MatDatepickerToggle, i4.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBldC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkUiLCJmaWxlIjoicGV0LWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKlxuICogICogQ29weXJpZ2h0IDIwMTYtMjAxNyB0aGUgb3JpZ2luYWwgYXV0aG9yIG9yIGF1dGhvcnMuXG4gKiAgKlxuICogICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqICAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICogICpcbiAqICAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKiAgKlxuICogICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiAgKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKi9cblxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["PetService","ActivatedRoute","Router","PetTypeService","moment","i0","type_r3","PetEditComponent","petService","petTypeService","router","route","pet","currentOwner","currentType","petTypes","getPetTypes","subscribe","pettypes","errorMessage","error","petId","snapshot","params","id","getPetById","owner","type","that","birthDate","format","updatePet","toString","gotoOwnerDetail","navigate","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/pets/pet-edit/pet-edit.component.ts","/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/pets/pet-edit/pet-edit.component.html"],"sourcesContent":["/*\n *\n *  * Copyright 2016-2017 the original author or authors.\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *      http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *\n */\n\n\n/**\n * @author Vitaliy Fedoriv\n */\n\nimport {Component, Input, OnInit} from '@angular/core';\nimport {Pet} from '../pet';\nimport {PetService} from '../pet.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Owner} from '../../owners/owner';\nimport {PetType} from '../../pettypes/pettype';\nimport {PetTypeService} from '../../pettypes/pettype.service';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-pet-edit',\n  templateUrl: './pet-edit.component.html',\n  styleUrls: ['./pet-edit.component.css']\n})\nexport class PetEditComponent implements OnInit {\n  pet: Pet;\n  @Input() currentType: PetType;\n  currentOwner: Owner;\n  petTypes: PetType[];\n  errorMessage: string;\n\n  constructor(private petService: PetService, private petTypeService: PetTypeService, private router: Router,\n              private route: ActivatedRoute) {\n    this.pet = {} as Pet;\n    this.currentOwner = {} as Owner;\n    this.currentType = {} as PetType;\n    this.petTypes = [];\n  }\n\n  ngOnInit() {\n\n    this.petTypeService.getPetTypes().subscribe(\n      pettypes => this.petTypes = pettypes,\n      error => this.errorMessage = error as any);\n\n    const petId = this.route.snapshot.params.id;\n    this.petService.getPetById(petId).subscribe(\n      pet => {\n        this.pet = pet;\n        this.currentOwner = this.pet.owner;\n        this.currentType = this.pet.type;\n      },\n      error => this.errorMessage = error as any);\n\n  }\n\n  onSubmit(pet: Pet) {\n    pet.type = this.currentType;\n    const that = this;\n    // format output from datepicker to short string yyyy/mm/dd format\n    pet.birthDate = moment(pet.birthDate).format('YYYY/MM/DD');\n\n    this.petService.updatePet(pet.id.toString(), pet).subscribe(\n      res => this.gotoOwnerDetail(this.currentOwner),\n      error => this.errorMessage = error as any\n    );\n  }\n\n  gotoOwnerDetail(owner: Owner) {\n    this.router.navigate(['/owners', owner.id]);\n  }\n\n}\n","<!--\n  ~ /*\n  ~  * Copyright 2016-2017 the original author or authors.\n  ~  *\n  ~  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~  * you may not use this file except in compliance with the License.\n  ~  * You may obtain a copy of the License at\n  ~  *\n  ~  *      http://www.apache.org/licenses/LICENSE-2.0\n  ~  *\n  ~  * Unless required by applicable law or agreed to in writing, software\n  ~  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~  * See the License for the specific language governing permissions and\n  ~  * limitations under the License.\n  ~  */\n  -->\n\n<div class=\"container-fluid\">\n  <div class=\"container xd-container\">\n\n    <h2>\n      Pet\n    </h2>\n    <form class=\"form-horizontal\" (ngSubmit)=\"onSubmit(petForm.value)\" #petForm=\"ngForm\">\n      <div class=\"form-group\" hidden=\"true\">\n        <input type=\"text\" hidden=\"true\" class=\"form-control\" id=\"id\" [(ngModel)]=\"pet.id\" name=\"id\"/>\n        <input type=\"text\" hidden=\"true\" class=\"form-control\" id=\"owner\" [(ngModel)]=\"pet.owner\" name=\"owner\"/>\n      </div>\n      <div class=\"form-group\">\n        <label for=\"owner\" class=\"col-sm-2 control-label\">Owner</label>\n        <div class=\"col-sm-10\">\n          <input id=\"owner_name\" name=\"owner_name\" class=\"form-control\" type=\"text\"\n                 value=\"{{ currentOwner.firstName }} {{ currentOwner.lastName }}\" readonly/>\n        </div>\n      </div>\n      <br/>\n      <div class=\"form-group \">\n        <label for=\"name\" class=\"col-sm-2 control-label\">Name</label>\n        <div class=\"col-sm-10\">\n          <input id=\"name\" name=\"name\" class=\"form-control\" type=\"text\" [(ngModel)]=\"pet.name\"/>\n        </div>\n      </div>\n      <div class=\"form-group \">\n        <label class=\"col-sm-2 control-label\">Birth Date</label>\n        <input matInput [matDatepicker]=\"birthDateDatepicker\" [ngModel]=\"pet.birthDate | date:'yyyy-MM-dd'\" name=\"birthDate\">\n        <mat-datepicker-toggle matSuffix [for]=\"birthDateDatepicker\"></mat-datepicker-toggle>\n        <mat-datepicker #birthDateDatepicker></mat-datepicker>\n      </div>\n      <div class=\"control-group\">\n        <div class=\"form-group \">\n          <label for=\"type\" class=\"col-sm-2 control-label\">Type </label>\n          <div class=\"col-sm-10\">\n            <div class=\"col-sm-2\">\n              <input id=\"type1\" name=\"type1\" class=\"form-control\" type=\"text\" value=\"{{ currentType.name }}\" readonly/>\n            </div>\n            <div class=\"col-sm-8\">\n              <select id=\"type\" name=\"type\" class=\"form-control\" [(ngModel)]=\"currentType\">\n                <option *ngFor=\"let type of petTypes\"\n                        [selected]=\"type.id == currentType.id ? true : null\"\n                        [ngValue]=\"type\">{{ type.name }}\n                </option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n          <br/>\n          <button class=\"btn btn-default\" type=\"button\" (click)=\"gotoOwnerDetail(pet.owner)\">< Back</button>\n          <button class=\"btn btn-default\" type=\"submit\">Update Pet</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}