{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { VetService } from '../vet.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SpecialtyService } from '../../specialties/specialty.service';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../specialties/specialty.service\";\nimport * as i3 from \"../vet.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction VetEditComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"First name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VetEditComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"First name must be at least 2 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VetEditComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"Last name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VetEditComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1, \"Last name must be at least 2 characters long\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction VetEditComponent_mat_option_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var specialty_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", specialty_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", specialty_r5.name, \" \");\n  }\n}\n\nexport var VetEditComponent = /*#__PURE__*/function () {\n  function VetEditComponent(formBuilder, specialtyService, vetService, route, router) {\n    _classCallCheck(this, VetEditComponent);\n\n    this.formBuilder = formBuilder;\n    this.specialtyService = specialtyService;\n    this.vetService = vetService;\n    this.route = route;\n    this.router = router;\n    this.vet = {};\n    this.specList = [];\n    this.buildForm();\n  }\n\n  _createClass(VetEditComponent, [{\n    key: \"buildForm\",\n    value: function buildForm() {\n      this.idCtrl = new FormControl(null);\n      this.firstNameCtrl = new FormControl('', [Validators.required, Validators.minLength(2)]);\n      this.lastNameCtrl = new FormControl('', [Validators.required, Validators.minLength(2)]);\n      this.specialtiesCtrl = new FormControl(null);\n      this.vetEditForm = this.formBuilder.group({\n        id: this.idCtrl,\n        firstName: this.firstNameCtrl,\n        lastName: this.lastNameCtrl,\n        specialties: this.specialtiesCtrl\n      });\n    }\n  }, {\n    key: \"compareSpecFn\",\n    value: function compareSpecFn(c1, c2) {\n      return c1 && c2 ? c1.id === c2.id : c1 === c2;\n    }\n  }, {\n    key: \"initFormValues\",\n    value: function initFormValues() {\n      this.idCtrl.setValue(this.vet.id);\n      this.firstNameCtrl.setValue(this.vet.firstName);\n      this.lastNameCtrl.setValue(this.vet.lastName);\n      this.specialtiesCtrl.setValue(this.vet.specialties);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // we use SpecResolver and VetResolver (get data before init component)\n      this.specList = this.route.snapshot.data.specs;\n      this.vet = this.route.snapshot.data.vet;\n      this.vet.specialties = this.route.snapshot.data.vet.specialties;\n      this.initFormValues();\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(vet) {\n      var _this = this;\n\n      this.vetService.updateVet(vet.id.toString(), vet).subscribe(function (res) {\n        console.log('update success');\n\n        _this.gotoVetList();\n      }, function (error) {\n        return _this.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"gotoVetList\",\n    value: function gotoVetList() {\n      this.router.navigate(['/vets']);\n    }\n  }]);\n\n  return VetEditComponent;\n}();\n\nVetEditComponent.ɵfac = function VetEditComponent_Factory(t) {\n  return new (t || VetEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SpecialtyService), i0.ɵɵdirectiveInject(i3.VetService), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i4.Router));\n};\n\nVetEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VetEditComponent,\n  selectors: [[\"app-vet-edit\"]],\n  decls: 37,\n  vars: 24,\n  consts: [[1, \"container-fluid\"], [1, \"container\", \"xd-container\"], [\"id\", \"vet_form\", 1, \"form-horizontal\", 3, \"formGroup\", \"ngSubmit\"], [\"hidden\", \"true\", 1, \"form-group\"], [\"type\", \"text\", \"hidden\", \"true\", \"id\", \"id\", \"name\", \"id\", \"formControlName\", \"id\", 1, \"form-control\"], [1, \"form-group\", \"has-feedback\"], [\"for\", \"firstName\", 1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"aria-hidden\", \"true\", 1, \"glyphicon\", \"form-control-feedback\"], [\"class\", \"help-block\", 4, \"ngIf\"], [\"for\", \"lastName\", 1, \"col-sm-2\", \"control-label\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"formControlName\", \"lastName\", 1, \"form-control\"], [1, \"control-group\"], [1, \"form-group\"], [\"for\", \"spec\", 1, \"col-sm-2\", \"control-label\"], [\"id\", \"spec\", \"name\", \"specialties\", \"formControlName\", \"specialties\", \"multiple\", \"\", 3, \"compareWith\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\", 3, \"disabled\"], [1, \"help-block\"], [3, \"value\"]],\n  template: function VetEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Edit Veterinarian\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function VetEditComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onSubmit(ctx.vetEditForm.value);\n      });\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"First Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵelement(11, \"input\", 8)(12, \"span\", 9);\n      i0.ɵɵtemplate(13, VetEditComponent_span_13_Template, 2, 0, \"span\", 10);\n      i0.ɵɵtemplate(14, VetEditComponent_span_14_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Last Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 7);\n      i0.ɵɵelement(19, \"input\", 12)(20, \"span\", 9);\n      i0.ɵɵtemplate(21, VetEditComponent_span_21_Template, 2, 0, \"span\", 10);\n      i0.ɵɵtemplate(22, VetEditComponent_span_22_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(23, \"div\", 13)(24, \"div\", 14)(25, \"label\", 15);\n      i0.ɵɵtext(26, \"Specialties\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"mat-form-field\", 7)(28, \"mat-select\", 16);\n      i0.ɵɵtemplate(29, VetEditComponent_mat_option_29_Template, 2, 2, \"mat-option\", 17);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(30, \"div\", 14)(31, \"div\", 18);\n      i0.ɵɵelement(32, \"br\");\n      i0.ɵɵelementStart(33, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function VetEditComponent_Template_button_click_33_listener() {\n        return ctx.gotoVetList();\n      });\n      i0.ɵɵtext(34, \"< Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"button\", 20);\n      i0.ɵɵtext(36, \"Save Vet\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.vetEditForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵclassProp(\"has-success\", ctx.firstNameCtrl.dirty && ctx.firstNameCtrl.valid)(\"has-error\", ctx.firstNameCtrl.dirty && !ctx.firstNameCtrl.valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"glyphicon-ok\", ctx.firstNameCtrl.valid)(\"glyphicon-remove\", !ctx.firstNameCtrl.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstNameCtrl.dirty && ctx.firstNameCtrl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstNameCtrl.dirty && ctx.firstNameCtrl.hasError(\"minlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassProp(\"has-success\", ctx.lastNameCtrl.dirty && ctx.lastNameCtrl.valid)(\"has-error\", ctx.lastNameCtrl.dirty && !ctx.lastNameCtrl.valid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵclassProp(\"glyphicon-ok\", ctx.lastNameCtrl.valid)(\"glyphicon-remove\", !ctx.lastNameCtrl.valid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastNameCtrl.dirty && ctx.lastNameCtrl.hasError(\"required\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastNameCtrl.dirty && ctx.lastNameCtrl.hasError(\"minlength\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"compareWith\", ctx.compareSpecFn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.specList);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.vetEditForm.invalid);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.MatFormField, i7.MatSelect, i8.MatOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZldC1lZGl0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7RUFnQkUiLCJmaWxlIjoidmV0LWVkaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKlxuICogICogQ29weXJpZ2h0IDIwMTYtMjAxNyB0aGUgb3JpZ2luYWwgYXV0aG9yIG9yIGF1dGhvcnMuXG4gKiAgKlxuICogICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqICAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqICAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICogICpcbiAqICAqICAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKiAgKlxuICogICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiAgKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiAgKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqXG4gKi9cblxuIl19 */\"]\n});","map":{"version":3,"mappings":"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","names":["VetService","ActivatedRoute","Router","SpecialtyService","FormBuilder","FormControl","Validators","i0","VetEditComponent","formBuilder","specialtyService","vetService","route","router","vet","specList","buildForm","idCtrl","firstNameCtrl","required","minLength","lastNameCtrl","specialtiesCtrl","vetEditForm","group","id","firstName","lastName","specialties","c1","c2","setValue","snapshot","data","specs","initFormValues","updateVet","toString","subscribe","console","log","gotoVetList","errorMessage","error","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/vets/vet-edit/vet-edit.component.ts","/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/vets/vet-edit/vet-edit.component.html"],"sourcesContent":["/*\n *\n *  * Copyright 2016-2018 the original author or authors.\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *      http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *\n */\n\n/**\n * @author Vitaliy Fedoriv\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {Vet} from '../vet';\nimport {VetService} from '../vet.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SpecialtyService} from '../../specialties/specialty.service';\nimport {Specialty} from '../../specialties/specialty';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n@Component({\n  selector: 'app-vet-edit',\n  templateUrl: './vet-edit.component.html',\n  styleUrls: ['./vet-edit.component.css']\n})\nexport class VetEditComponent implements OnInit {\n  vetEditForm: FormGroup;\n  idCtrl: FormControl;\n  firstNameCtrl: FormControl;\n  lastNameCtrl: FormControl;\n  specialtiesCtrl: FormControl;\n  vet: Vet;\n  specList: Specialty[];\n  errorMessage: string;\n\n  constructor(private formBuilder: FormBuilder, private specialtyService: SpecialtyService,\n              private vetService: VetService, private route: ActivatedRoute, private router: Router) {\n    this.vet = {} as Vet;\n    this.specList = [] as Specialty[];\n    this.buildForm();\n  }\n\n  buildForm() {\n    this.idCtrl = new FormControl(null);\n    this.firstNameCtrl = new FormControl('', [Validators.required, Validators.minLength(2)]);\n    this.lastNameCtrl = new FormControl('', [Validators.required, Validators.minLength(2)]);\n    this.specialtiesCtrl = new FormControl(null);\n    this.vetEditForm = this.formBuilder.group({\n      id: this.idCtrl,\n      firstName: this.firstNameCtrl,\n      lastName: this.lastNameCtrl,\n      specialties: this.specialtiesCtrl\n    });\n  }\n\n  compareSpecFn(c1: Specialty, c2: Specialty): boolean {\n    return c1 && c2 ? c1.id === c2.id : c1 === c2;\n  }\n\n  initFormValues() {\n    this.idCtrl.setValue(this.vet.id);\n    this.firstNameCtrl.setValue(this.vet.firstName);\n    this.lastNameCtrl.setValue(this.vet.lastName);\n    this.specialtiesCtrl.setValue(this.vet.specialties);\n  }\n\n  ngOnInit() {\n    // we use SpecResolver and VetResolver (get data before init component)\n    this.specList = this.route.snapshot.data.specs;\n    this.vet = this.route.snapshot.data.vet;\n    this.vet.specialties = this.route.snapshot.data.vet.specialties;\n    this.initFormValues();\n  }\n\n  onSubmit(vet: Vet) {\n    this.vetService.updateVet(vet.id.toString(), vet).subscribe(\n      res => {\n        console.log('update success');\n        this.gotoVetList();\n      },\n      error => this.errorMessage = error as any);\n\n  }\n\n  gotoVetList() {\n    this.router.navigate(['/vets']);\n  }\n\n}\n","<!--\n  ~ /*\n  ~  * Copyright 2016-2018 the original author or authors.\n  ~  *\n  ~  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~  * you may not use this file except in compliance with the License.\n  ~  * You may obtain a copy of the License at\n  ~  *\n  ~  *      http://www.apache.org/licenses/LICENSE-2.0\n  ~  *\n  ~  * Unless required by applicable law or agreed to in writing, software\n  ~  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~  * See the License for the specific language governing permissions and\n  ~  * limitations under the License.\n  ~  */\n  -->\n\n<div class=\"container-fluid\">\n  <div class=\"container xd-container\">\n    <h2>Edit Veterinarian</h2>\n    <form id=\"vet_form\" class=\"form-horizontal\" (ngSubmit)=\"onSubmit(vetEditForm.value)\" [formGroup]=\"vetEditForm\">\n      <div class=\"form-group\" hidden=\"true\">\n        <input type=\"text\" hidden=\"true\" class=\"form-control\" id=\"id\" name=\"id\" formControlName=\"id\"/>\n      </div>\n      <div class=\"form-group has-feedback\" [class.has-success]=\"firstNameCtrl.dirty && firstNameCtrl.valid\" [class.has-error]=\"firstNameCtrl.dirty &&  !firstNameCtrl.valid\">\n        <label for=\"firstName\" class=\"col-sm-2 control-label\">First Name</label>\n        <div class=\"col-sm-10\">\n          <input type=\"text\" class=\"form-control\" id=\"firstName\" name=\"firstName\" formControlName=\"firstName\"/>\n          <span class=\"glyphicon form-control-feedback\" [class.glyphicon-ok]=\"firstNameCtrl.valid\" [class.glyphicon-remove]=\"!firstNameCtrl.valid\" aria-hidden=\"true\"></span>\n          <span class=\"help-block\" *ngIf=\"firstNameCtrl.dirty && firstNameCtrl.hasError('required')\">First name is required</span>\n          <span class=\"help-block\" *ngIf=\"firstNameCtrl.dirty && firstNameCtrl.hasError('minlength')\">First name must be at least 2 characters long</span>\n        </div>\n      </div>\n      <div class=\"form-group has-feedback\" [class.has-success]=\"lastNameCtrl.dirty && lastNameCtrl.valid\" [class.has-error]=\"lastNameCtrl.dirty && !lastNameCtrl.valid\">\n        <label for=\"lastName\" class=\"col-sm-2 control-label\">Last Name</label>\n        <div class=\"col-sm-10\">\n          <input type=\"text\" class=\"form-control\" id=\"lastName\" name=\"lastName\" formControlName=\"lastName\"/>\n          <span class=\"glyphicon form-control-feedback\" [class.glyphicon-ok]=\"lastNameCtrl.valid\" [class.glyphicon-remove]=\"!lastNameCtrl.valid\" aria-hidden=\"true\"></span>\n          <span class=\"help-block\" *ngIf=\"lastNameCtrl.dirty && lastNameCtrl.hasError('required')\">Last name is required</span>\n          <span class=\"help-block\" *ngIf=\"lastNameCtrl.dirty && lastNameCtrl.hasError('minlength')\">Last name must be at least 2 characters long</span>\n        </div>\n      </div>\n      <div class=\"control-group\">\n        <div class=\"form-group \">\n          <label for=\"spec\" class=\"col-sm-2 control-label\">Specialties</label>\n            <mat-form-field class=\"col-sm-10\">\n              <mat-select  [compareWith]=\"compareSpecFn\" id=\"spec\" name=\"specialties\" formControlName=\"specialties\" multiple>\n                <mat-option *ngFor=\"let specialty of specList\" [value]=\"specialty\">\n                  {{ specialty.name }}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n          <br/>\n          <button class=\"btn btn-default\" type=\"button\" (click)=\"gotoVetList()\">< Back</button>\n          <button class=\"btn btn-default\" type=\"submit\" [disabled]=\"vetEditForm.invalid\">Save Vet</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}