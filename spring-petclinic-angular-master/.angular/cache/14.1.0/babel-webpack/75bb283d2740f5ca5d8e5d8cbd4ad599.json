{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { environment } from \"../../environments/environment\";\nimport { catchError } from \"rxjs\";\nimport { HttpErrorHandler } from \"../error.service\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error.service\";\nexport var SpecialtyService = /*#__PURE__*/function () {\n  function SpecialtyService(http, httpErrorHandler) {\n    _classCallCheck(this, SpecialtyService);\n\n    this.http = http;\n    this.httpErrorHandler = httpErrorHandler;\n    this.entityUrl = environment.REST_API_URL + \"specialties\";\n    this.handlerError = httpErrorHandler.createHandleError(\"OwnerService\");\n  }\n\n  _createClass(SpecialtyService, [{\n    key: \"getSpecialties\",\n    value: function getSpecialties() {\n      return this.http.get(this.entityUrl).pipe(catchError(this.handlerError(\"getSpecialties\", [])));\n    }\n  }, {\n    key: \"getSpecialtyById\",\n    value: function getSpecialtyById(specId) {\n      return this.http.get(this.entityUrl + \"/\" + specId).pipe(catchError(this.handlerError(\"getSpecialtyById\", {})));\n    }\n  }, {\n    key: \"addSpecialty\",\n    value: function addSpecialty(specialty) {\n      return this.http.post(this.entityUrl, specialty).pipe(catchError(this.handlerError(\"addSpecialty\", specialty)));\n    }\n  }, {\n    key: \"updateSpecialty\",\n    value: function updateSpecialty(specId, specialty) {\n      return this.http.put(this.entityUrl + \"/\" + specId, specialty).pipe(catchError(this.handlerError(\"updateSpecialty\", specialty)));\n    }\n  }, {\n    key: \"deleteSpecialty\",\n    value: function deleteSpecialty(specId) {\n      return this.http.delete(this.entityUrl + \"/\" + specId).pipe(catchError(this.handlerError(\"deleteSpecialty\", 0)));\n    }\n  }]);\n\n  return SpecialtyService;\n}();\n\nSpecialtyService.ɵfac = function SpecialtyService_Factory(t) {\n  return new (t || SpecialtyService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorHandler));\n};\n\nSpecialtyService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpecialtyService,\n  factory: SpecialtyService.ɵfac\n});","map":{"version":3,"mappings":";;AAuBA,SAASA,WAAT,QAA4B,gCAA5B;AAGA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAASC,UAAT,QAA2B,sBAA3B;;;;AAGA,WAAaC,gBAAb;EAKE,0BACUC,IADV,EAEUC,gBAFV,EAE4C;IAAA;;IADlC;IACA;IANF,iBAAYN,WAAW,CAACO,YAAZ,GAA2B,aAAvC;IAQN,KAAKC,YAAL,GAAoBF,gBAAgB,CAACG,iBAAjB,CAAmC,cAAnC,CAApB;EACD;;EAVH;IAAA;IAAA,OAYE,0BAAc;MACZ,OAAO,KAAKJ,IAAL,CACJK,GADI,CACa,KAAKC,SADlB,EAEJC,IAFI,CAECX,UAAU,CAAC,KAAKO,YAAL,CAAkB,gBAAlB,EAAoC,EAApC,CAAD,CAFX,CAAP;IAGD;EAhBH;IAAA;IAAA,OAkBE,0BAAiBK,MAAjB,EAA+B;MAC7B,OAAO,KAAKR,IAAL,CACJK,GADI,CACW,KAAKC,SAAL,GAAiB,GAAjB,GAAuBE,MADlC,EAEJD,IAFI,CAECX,UAAU,CAAC,KAAKO,YAAL,CAAkB,kBAAlB,EAAsC,EAAtC,CAAD,CAFX,CAAP;IAGD;EAtBH;IAAA;IAAA,OAwBE,sBAAaM,SAAb,EAAiC;MAC/B,OAAO,KAAKT,IAAL,CACJU,IADI,CACY,KAAKJ,SADjB,EAC4BG,SAD5B,EAEJF,IAFI,CAECX,UAAU,CAAC,KAAKO,YAAL,CAAkB,cAAlB,EAAkCM,SAAlC,CAAD,CAFX,CAAP;IAGD;EA5BH;IAAA;IAAA,OA8BE,yBAAgBD,MAAhB,EAAgCC,SAAhC,EAAoD;MAClD,OAAO,KAAKT,IAAL,CACJW,GADI,CACW,KAAKL,SAAL,GAAiB,GAAjB,GAAuBE,MADlC,EAC0CC,SAD1C,EAEJF,IAFI,CAECX,UAAU,CAAC,KAAKO,YAAL,CAAkB,iBAAlB,EAAqCM,SAArC,CAAD,CAFX,CAAP;IAGD;EAlCH;IAAA;IAAA,OAoCE,yBAAgBD,MAAhB,EAA8B;MAC5B,OAAO,KAAKR,IAAL,CACJY,MADI,CACW,KAAKN,SAAL,GAAiB,GAAjB,GAAuBE,MADlC,EAEJD,IAFI,CAECX,UAAU,CAAC,KAAKO,YAAL,CAAkB,iBAAlB,EAAqC,CAArC,CAAD,CAFX,CAAP;IAGD;EAxCH;;EAAA;AAAA;;;mBAAaJ,kBAAgBc;AAAA;;;SAAhBd;EAAgBe,SAAhBf,gBAAgB","names":["environment","catchError","HttpErrorHandler","HttpClient","SpecialtyService","http","httpErrorHandler","REST_API_URL","handlerError","createHandleError","get","entityUrl","pipe","specId","specialty","post","put","delete","i0","factory"],"sourceRoot":"","sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/specialties/specialty.service.ts"],"sourcesContent":["/*\n *\n *  * Copyright 2016-2017 the original author or authors.\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *      http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *\n */\n\n/**\n * @author Vitaliy Fedoriv\n */\n\nimport { Injectable } from \"@angular/core\";\nimport { environment } from \"../../environments/environment\";\nimport { Observable } from \"rxjs\";\nimport { Specialty } from \"./specialty\";\nimport { catchError } from \"rxjs\";\nimport { HandleError, HttpErrorHandler } from \"../error.service\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class SpecialtyService {\n  private entityUrl = environment.REST_API_URL + \"specialties\";\n\n  private handlerError: HandleError;\n\n  constructor(\n    private http: HttpClient,\n    private httpErrorHandler: HttpErrorHandler\n  ) {\n    this.handlerError = httpErrorHandler.createHandleError(\"OwnerService\");\n  }\n\n  getSpecialties(): Observable<Specialty[]> {\n    return this.http\n      .get<Specialty[]>(this.entityUrl)\n      .pipe(catchError(this.handlerError(\"getSpecialties\", [])));\n  }\n\n  getSpecialtyById(specId: string): Observable<Specialty> {\n    return this.http\n      .get<Specialty>(this.entityUrl + \"/\" + specId)\n      .pipe(catchError(this.handlerError(\"getSpecialtyById\", {} as Specialty)));\n  }\n\n  addSpecialty(specialty: Specialty): Observable<Specialty> {\n    return this.http\n      .post<Specialty>(this.entityUrl, specialty)\n      .pipe(catchError(this.handlerError(\"addSpecialty\", specialty)));\n  }\n\n  updateSpecialty(specId: string, specialty: Specialty): Observable<Specialty> {\n    return this.http\n      .put<Specialty>(this.entityUrl + \"/\" + specId, specialty)\n      .pipe(catchError(this.handlerError(\"updateSpecialty\", specialty)));\n  }\n\n  deleteSpecialty(specId: string): Observable<number> {\n    return this.http\n      .delete<number>(this.entityUrl + \"/\" + specId)\n      .pipe(catchError(this.handlerError(\"deleteSpecialty\", 0)));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}