{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorHandler } from '../error.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error.service\";\nexport var PetService = /*#__PURE__*/(function () {\n  var PetService = /*#__PURE__*/function () {\n    function PetService(http, httpErrorHandler) {\n      _classCallCheck(this, PetService);\n\n      this.http = http;\n      this.httpErrorHandler = httpErrorHandler;\n      this.entityUrl = environment.REST_API_URL + 'pets';\n      this.handlerError = httpErrorHandler.createHandleError('OwnerService');\n    }\n\n    _createClass(PetService, [{\n      key: \"getPets\",\n      value: function getPets() {\n        return this.http.get(this.entityUrl).pipe(catchError(this.handlerError('getPets', [])));\n      }\n    }, {\n      key: \"getPetById\",\n      value: function getPetById(petId) {\n        return this.http.get(this.entityUrl + '/' + petId).pipe(catchError(this.handlerError('getPetById', {})));\n      }\n    }, {\n      key: \"addPet\",\n      value: function addPet(pet) {\n        return this.http.post(this.entityUrl, pet).pipe(catchError(this.handlerError('addPet', pet)));\n      }\n    }, {\n      key: \"updatePet\",\n      value: function updatePet(petId, pet) {\n        return this.http.put(this.entityUrl + '/' + petId, pet).pipe(catchError(this.handlerError('updatePet', pet)));\n      }\n    }, {\n      key: \"deletePet\",\n      value: function deletePet(petId) {\n        return this.http.delete(this.entityUrl + '/' + petId).pipe(catchError(this.handlerError('deletePet', 0)));\n      }\n    }]);\n\n    return PetService;\n  }();\n\n  PetService.ɵfac = function PetService_Factory(t) {\n    return new (t || PetService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorHandler));\n  };\n\n  PetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetService,\n    factory: PetService.ɵfac\n  });\n  return PetService;\n})();","map":null,"metadata":{},"sourceType":"module"}