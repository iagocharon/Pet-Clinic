{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { environment } from '../../environments/environment';\nimport { HttpErrorHandler } from '../error.service';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error.service\";\nexport var VisitService = /*#__PURE__*/(function () {\n  var VisitService = /*#__PURE__*/function () {\n    function VisitService(http, httpErrorHandler) {\n      _classCallCheck(this, VisitService);\n\n      this.http = http;\n      this.httpErrorHandler = httpErrorHandler;\n      this.entityUrl = environment.REST_API_URL + 'visits';\n      this.handlerError = httpErrorHandler.createHandleError('OwnerService');\n    }\n\n    _createClass(VisitService, [{\n      key: \"getVisits\",\n      value: function getVisits() {\n        return this.http.get(this.entityUrl).pipe(catchError(this.handlerError('getVisits', [])));\n      }\n    }, {\n      key: \"getVisitById\",\n      value: function getVisitById(visitId) {\n        return this.http.get(this.entityUrl + '/' + visitId).pipe(catchError(this.handlerError('getVisitById', {})));\n      }\n    }, {\n      key: \"addVisit\",\n      value: function addVisit(visit) {\n        return this.http.post(this.entityUrl, visit).pipe(catchError(this.handlerError('addVisit', visit)));\n      }\n    }, {\n      key: \"updateVisit\",\n      value: function updateVisit(visitId, visit) {\n        return this.http.put(this.entityUrl + '/' + visitId, visit).pipe(catchError(this.handlerError('updateVisit', visit)));\n      }\n    }, {\n      key: \"deleteVisit\",\n      value: function deleteVisit(visitId) {\n        return this.http.delete(this.entityUrl + '/' + visitId).pipe(catchError(this.handlerError('deleteVisit', 0)));\n      }\n    }]);\n\n    return VisitService;\n  }();\n\n  VisitService.ɵfac = function VisitService_Factory(t) {\n    return new (t || VisitService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorHandler));\n  };\n\n  VisitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VisitService,\n    factory: VisitService.ɵfac\n  });\n  return VisitService;\n})();","map":null,"metadata":{},"sourceType":"module"}