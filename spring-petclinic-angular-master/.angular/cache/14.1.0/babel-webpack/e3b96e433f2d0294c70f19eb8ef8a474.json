{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { SpecialtyService } from './specialty.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./specialty.service\";\n/**\n * @author Vitaliy Fedoriv\n */\n\nexport var SpecResolver = /*#__PURE__*/function () {\n  function SpecResolver(specialtyService) {\n    _classCallCheck(this, SpecResolver);\n\n    this.specialtyService = specialtyService;\n  }\n\n  _createClass(SpecResolver, [{\n    key: \"resolve\",\n    value: function resolve() {\n      return this.specialtyService.getSpecialties();\n    }\n  }]);\n\n  return SpecResolver;\n}();\n\nSpecResolver.ɵfac = function SpecResolver_Factory(t) {\n  return new (t || SpecResolver)(i0.ɵɵinject(i1.SpecialtyService));\n};\n\nSpecResolver.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SpecResolver,\n  factory: SpecResolver.ɵfac\n});","map":{"version":3,"mappings":";;AAqBA,SAAQA,gBAAR,QAA+B,qBAA/B;;;AAGA;;;;AAKA,WAAaC,YAAb;EAEE,sBAAoBC,gBAApB,EAAsD;IAAA;;IAAlC;EAAuC;;EAF7D;IAAA;IAAA,OAIE,mBAAO;MACL,OAAO,KAAKA,gBAAL,CAAsBC,cAAtB,EAAP;IACD;EANH;;EAAA;AAAA;;;mBAAaF,cAAYG;AAAA;;;SAAZH;EAAYI,SAAZJ,YAAY","names":["SpecialtyService","SpecResolver","specialtyService","getSpecialties","i0","factory"],"sourceRoot":"","sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/specialties/spec-resolver.ts"],"sourcesContent":["/*\n *\n *  * Copyright 2016-2017 the original author or authors.\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *      http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *\n */\n\nimport {Injectable} from '@angular/core';\nimport {Specialty} from './specialty';\nimport {Resolve} from '@angular/router';\nimport {SpecialtyService} from './specialty.service';\nimport {Observable} from 'rxjs';\n\n/**\n * @author Vitaliy Fedoriv\n */\n\n@Injectable()\nexport class SpecResolver implements Resolve<Specialty[]> {\n\n  constructor(private specialtyService: SpecialtyService) { }\n\n  resolve(): Observable<Specialty[]> | Promise<Specialty[]> | Specialty[] {\n    return this.specialtyService.getSpecialties();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}