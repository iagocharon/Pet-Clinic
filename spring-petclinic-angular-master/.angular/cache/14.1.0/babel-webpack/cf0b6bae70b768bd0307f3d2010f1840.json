{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Router } from '@angular/router';\nimport { PetTypeService } from '../pettype.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../pettype.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../pettype-add/pettype-add.component\";\n\nfunction PettypeListComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"input\", 6);\n    i0.ɵɵlistener(\"ngModelChange\", function PettypeListComponent_tr_12_Template_input_ngModelChange_2_listener($event) {\n      var restoredCtx = i0.ɵɵrestoreView(_r5);\n      var pettype_r2 = restoredCtx.$implicit;\n      return i0.ɵɵresetView(pettype_r2.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(3, \"td\")(4, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PettypeListComponent_tr_12_Template_button_click_4_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r5);\n      var pettype_r2 = restoredCtx.$implicit;\n      var ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.showEditPettypeComponent(pettype_r2));\n    });\n    i0.ɵɵtext(5, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function PettypeListComponent_tr_12_Template_button_click_6_listener() {\n      var restoredCtx = i0.ɵɵrestoreView(_r5);\n      var pettype_r2 = restoredCtx.$implicit;\n      var ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.deletePettype(pettype_r2));\n    });\n    i0.ɵɵtext(7, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    var pettype_r2 = ctx.$implicit;\n    var element_id_r3 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"id\", element_id_r3)(\"readonly\", true)(\"ngModel\", pettype_r2.name);\n  }\n}\n\nfunction PettypeListComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"app-pettype-add\", 7);\n    i0.ɵɵlistener(\"newPetType\", function PettypeListComponent_div_13_Template_app_pettype_add_newPetType_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      var ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onNewPettype($event));\n    });\n    i0.ɵɵtext(2, \"...\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport var PettypeListComponent = /*#__PURE__*/function () {\n  function PettypeListComponent(pettypeService, router) {\n    _classCallCheck(this, PettypeListComponent);\n\n    this.pettypeService = pettypeService;\n    this.router = router;\n    this.isInsert = false;\n    this.pettypes = [];\n  }\n\n  _createClass(PettypeListComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.pettypeService.getPetTypes().subscribe(function (pettypes) {\n        return _this.pettypes = pettypes;\n      }, function (error) {\n        return _this.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"deletePettype\",\n    value: function deletePettype(pettype) {\n      var _this2 = this;\n\n      this.pettypeService.deletePetType(pettype.id.toString()).subscribe(function (response) {\n        _this2.responseStatus = response;\n        _this2.pettypes = _this2.pettypes.filter(function (currentItem) {\n          return !(currentItem.id === pettype.id);\n        });\n      }, function (error) {\n        return _this2.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"onNewPettype\",\n    value: function onNewPettype(newPetType) {\n      this.pettypes.push(newPetType);\n      this.showAddPettypeComponent();\n    }\n  }, {\n    key: \"showAddPettypeComponent\",\n    value: function showAddPettypeComponent() {\n      this.isInsert = !this.isInsert;\n    }\n  }, {\n    key: \"showEditPettypeComponent\",\n    value: function showEditPettypeComponent(updatedPetType) {\n      this.router.navigate(['/pettypes', updatedPetType.id.toString(), 'edit']);\n    }\n  }, {\n    key: \"gotoHome\",\n    value: function gotoHome() {\n      this.router.navigate(['/welcome']);\n    }\n  }]);\n\n  return PettypeListComponent;\n}();\n\nPettypeListComponent.ɵfac = function PettypeListComponent_Factory(t) {\n  return new (t || PettypeListComponent)(i0.ɵɵdirectiveInject(i1.PetTypeService), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nPettypeListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PettypeListComponent,\n  selectors: [[\"app-pettype-list\"]],\n  decls: 19,\n  vars: 2,\n  consts: [[1, \"container-fluid\"], [1, \"container\", \"xd-container\"], [\"id\", \"pettypes\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"text\", \"name\", \"pettype_name\", 1, \"form-control\", 3, \"id\", \"readonly\", \"ngModel\", \"ngModelChange\"], [3, \"newPetType\"]],\n  template: function PettypeListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Pet Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"table\", 2)(5, \"thead\")(6, \"tr\")(7, \"th\");\n      i0.ɵɵtext(8, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"th\")(10, \"th\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"tbody\");\n      i0.ɵɵtemplate(12, PettypeListComponent_tr_12_Template, 8, 3, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(13, PettypeListComponent_div_13_Template, 3, 0, \"div\", 4);\n      i0.ɵɵelementStart(14, \"div\")(15, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function PettypeListComponent_Template_button_click_15_listener() {\n        return ctx.gotoHome();\n      });\n      i0.ɵɵtext(16, \"Home\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function PettypeListComponent_Template_button_click_17_listener() {\n        return ctx.showAddPettypeComponent();\n      });\n      i0.ɵɵtext(18, \" Add \");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.pettypes);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isInsert);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.PettypeAddComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwZXR0eXBlLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Router","PetTypeService","i0","pettype_r2","PettypeListComponent","pettypeService","router","pettypes","getPetTypes","subscribe","errorMessage","error","pettype","deletePetType","id","toString","responseStatus","response","filter","currentItem","newPetType","push","showAddPettypeComponent","isInsert","updatedPetType","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/pettypes/pettype-list/pettype-list.component.ts","/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/pettypes/pettype-list/pettype-list.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {PetType} from '../pettype';\nimport {Router} from '@angular/router';\nimport {PetTypeService} from '../pettype.service';\nimport {Specialty} from '../../specialties/specialty';\n\n@Component({\n  selector: 'app-pettype-list',\n  templateUrl: './pettype-list.component.html',\n  styleUrls: ['./pettype-list.component.css']\n})\nexport class PettypeListComponent implements OnInit {\n  pettypes: PetType[];\n  errorMessage: string;\n  responseStatus: number;\n  isInsert = false;\n\n  constructor(private pettypeService: PetTypeService, private router: Router) {\n    this.pettypes = [] as PetType[];\n  }\n\n  ngOnInit() {\n    this.pettypeService.getPetTypes().subscribe(\n      pettypes => this.pettypes = pettypes,\n      error => this.errorMessage = error as any\n    );\n  }\n\n  deletePettype(pettype: PetType) {\n    this.pettypeService.deletePetType(pettype.id.toString()).subscribe(\n      response => {\n        this.responseStatus = response;\n        this.pettypes = this.pettypes.filter(currentItem => !(currentItem.id === pettype.id));\n      },\n      error => this.errorMessage = error as any);\n  }\n\n  onNewPettype(newPetType: Specialty) {\n    this.pettypes.push(newPetType);\n    this.showAddPettypeComponent();\n  }\n\n  showAddPettypeComponent() {\n    this.isInsert = !this.isInsert;\n  }\n\n  showEditPettypeComponent(updatedPetType: PetType) {\n    this.router.navigate(['/pettypes', updatedPetType.id.toString(), 'edit']);\n  }\n\n  gotoHome() {\n    this.router.navigate(['/welcome']);\n  }\n}\n","<!--\n  ~ /*\n  ~  * Copyright 2016-2018 the original author or authors.\n  ~  *\n  ~  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~  * you may not use this file except in compliance with the License.\n  ~  * You may obtain a copy of the License at\n  ~  *\n  ~  *      http://www.apache.org/licenses/LICENSE-2.0\n  ~  *\n  ~  * Unless required by applicable law or agreed to in writing, software\n  ~  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~  * See the License for the specific language governing permissions and\n  ~  * limitations under the License.\n  ~  */\n  -->\n\n<div class=\"container-fluid\">\n  <div class=\"container xd-container\">\n\n    <h2>Pet Types</h2>\n    <table id=\"pettypes\" class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th></th>\n        <th></th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let pettype of pettypes; let element_id=index\">\n        <td>\n          <input [id]=element_id [readonly]=\"true\" type=\"text\" class=\"form-control\" [(ngModel)]=\"pettype.name\" name=\"pettype_name\" />\n        </td>\n        <td>\n          <button class=\"btn btn-default\" (click)=\"showEditPettypeComponent(pettype)\">Edit</button>\n          <button class=\"btn btn-default\" (click)=\"deletePettype(pettype)\">Delete</button>\n        </td>\n      </tr>\n      </tbody>\n    </table>\n    <div *ngIf=\"isInsert\">\n      <app-pettype-add (newPetType)=\"onNewPettype($event)\">...</app-pettype-add>\n    </div>\n    <div>\n      <button class=\"btn btn-default\" (click)=\"gotoHome()\">Home</button>\n      <button class=\"btn btn-default\" (click)=\"showAddPettypeComponent()\"> Add </button>\n    </div>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}