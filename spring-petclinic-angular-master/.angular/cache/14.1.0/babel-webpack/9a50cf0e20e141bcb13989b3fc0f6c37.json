{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { environment } from '../../environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { HttpErrorHandler } from '../error.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error.service\";\nexport var OwnerService = /*#__PURE__*/(function () {\n  var OwnerService = /*#__PURE__*/function () {\n    function OwnerService(http, httpErrorHandler) {\n      _classCallCheck(this, OwnerService);\n\n      this.http = http;\n      this.httpErrorHandler = httpErrorHandler;\n      this.entityUrl = environment.REST_API_URL + 'owners';\n      this.handlerError = httpErrorHandler.createHandleError('OwnerService');\n    }\n\n    _createClass(OwnerService, [{\n      key: \"getOwners\",\n      value: function getOwners() {\n        return this.http.get(this.entityUrl).pipe(catchError(this.handlerError('getOwners', [])));\n      }\n    }, {\n      key: \"getOwnerById\",\n      value: function getOwnerById(ownerId) {\n        return this.http.get(this.entityUrl + '/' + ownerId).pipe(catchError(this.handlerError('getOwnerById', {})));\n      }\n    }, {\n      key: \"addOwner\",\n      value: function addOwner(owner) {\n        return this.http.post(this.entityUrl, owner).pipe(catchError(this.handlerError('addOwner', owner)));\n      }\n    }, {\n      key: \"updateOwner\",\n      value: function updateOwner(ownerId, owner) {\n        return this.http.put(this.entityUrl + '/' + ownerId, owner).pipe(catchError(this.handlerError('updateOwner', owner)));\n      }\n    }, {\n      key: \"deleteOwner\",\n      value: function deleteOwner(ownerId) {\n        return this.http.delete(this.entityUrl + '/' + ownerId).pipe(catchError(this.handlerError('deleteOwner', [ownerId])));\n      }\n    }]);\n\n    return OwnerService;\n  }();\n\n  OwnerService.ɵfac = function OwnerService_Factory(t) {\n    return new (t || OwnerService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorHandler));\n  };\n\n  OwnerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OwnerService,\n    factory: OwnerService.ɵfac\n  });\n  return OwnerService;\n})();","map":null,"metadata":{},"sourceType":"module"}