{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { VisitService } from '../visit.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../visit.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/datepicker\";\nimport * as i5 from \"@angular/common\";\nexport var VisitEditComponent = /*#__PURE__*/function () {\n  function VisitEditComponent(visitService, route, router) {\n    _classCallCheck(this, VisitEditComponent);\n\n    this.visitService = visitService;\n    this.route = route;\n    this.router = router;\n    this.updateSuccess = false;\n    this.visit = {};\n    this.currentPet = {};\n    this.currentOwner = {};\n    this.currentPetType = {};\n  }\n\n  _createClass(VisitEditComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      var visitId = this.route.snapshot.params.id;\n      this.visitService.getVisitById(visitId).subscribe(function (response) {\n        _this.visit = response;\n        _this.currentPet = _this.visit.pet;\n        _this.currentPetType = _this.currentPet.type;\n        _this.currentOwner = _this.currentPet.owner;\n      }, function (error) {\n        return _this.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(visit) {\n      var _this2 = this;\n\n      visit.pet = this.currentPet; // format output from datepicker to short string yyyy/mm/dd format\n\n      visit.date = moment(visit.date).format('YYYY/MM/DD');\n      this.visitService.updateVisit(visit.id.toString(), visit).subscribe(function (res) {\n        return _this2.gotoOwnerDetail();\n      }, function (error) {\n        return _this2.errorMessage = error;\n      });\n    }\n  }, {\n    key: \"gotoOwnerDetail\",\n    value: function gotoOwnerDetail() {\n      this.router.navigate(['/owners', this.currentOwner.id]);\n    }\n  }]);\n\n  return VisitEditComponent;\n}();\n\nVisitEditComponent.ɵfac = function VisitEditComponent_Factory(t) {\n  return new (t || VisitEditComponent)(i0.ɵɵdirectiveInject(i1.VisitService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n};\n\nVisitEditComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VisitEditComponent,\n  selectors: [[\"app-visit-edit\"]],\n  decls: 51,\n  vars: 14,\n  consts: [[1, \"container-fluid\"], [1, \"container\", \"xd-container\"], [1, \"table\", \"table-striped\"], [\"id\", \"visit\", 1, \"form-horizontal\", 3, \"ngSubmit\"], [\"visitForm\", \"ngForm\"], [1, \"form-group\", \"has-feedback\"], [1, \"form-group\"], [1, \"col-sm-2\", \"control-label\"], [1, \"col-sm-10\"], [\"matInput\", \"\", \"name\", \"date\", 3, \"matDatepicker\", \"ngModel\"], [\"matSuffix\", \"\", 3, \"for\"], [\"visitDateDatepicker\", \"\"], [\"id\", \"description\", \"name\", \"description\", \"type\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-sm-offset-2\", \"col-sm-10\"], [\"type\", \"hidden\", \"name\", \"id\", \"id\", \"id\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"hidden\", \"name\", \"pet\", \"id\", \"pet\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-default\"]],\n  template: function VisitEditComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      var _r2 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Edit Visit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"b\");\n      i0.ɵɵtext(5, \"Pet\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"table\", 2)(7, \"thead\")(8, \"tr\")(9, \"th\");\n      i0.ɵɵtext(10, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\");\n      i0.ɵɵtext(12, \"Birth Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\");\n      i0.ɵɵtext(14, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"th\");\n      i0.ɵɵtext(16, \"Owner\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"tr\")(18, \"td\");\n      i0.ɵɵtext(19);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"td\");\n      i0.ɵɵtext(21);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"td\");\n      i0.ɵɵtext(23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"td\");\n      i0.ɵɵtext(25);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function VisitEditComponent_Template_form_ngSubmit_26_listener() {\n        i0.ɵɵrestoreView(_r2);\n\n        var _r0 = i0.ɵɵreference(27);\n\n        return i0.ɵɵresetView(ctx.onSubmit(_r0.value));\n      });\n      i0.ɵɵelementStart(28, \"div\", 5)(29, \"div\", 6)(30, \"label\", 7);\n      i0.ɵɵtext(31, \"Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 8);\n      i0.ɵɵelement(33, \"input\", 9);\n      i0.ɵɵpipe(34, \"date\");\n      i0.ɵɵelement(35, \"mat-datepicker-toggle\", 10)(36, \"mat-datepicker\", null, 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(38, \"div\", 6)(39, \"label\", 7);\n      i0.ɵɵtext(40, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 8)(42, \"input\", 12);\n      i0.ɵɵlistener(\"ngModelChange\", function VisitEditComponent_Template_input_ngModelChange_42_listener($event) {\n        return ctx.visit.description = $event;\n      });\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(43, \"div\", 6)(44, \"div\", 13)(45, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function VisitEditComponent_Template_input_ngModelChange_45_listener($event) {\n        return ctx.visit.id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function VisitEditComponent_Template_input_ngModelChange_46_listener($event) {\n        return ctx.visit.pet = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(47, \"button\", 16);\n      i0.ɵɵlistener(\"click\", function VisitEditComponent_Template_button_click_47_listener() {\n        return ctx.gotoOwnerDetail();\n      });\n      i0.ɵɵtext(48, \"Back\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"button\", 17);\n      i0.ɵɵtext(50, \"Update Visit\");\n      i0.ɵɵelementEnd()()()()()();\n    }\n\n    if (rf & 2) {\n      var _r1 = i0.ɵɵreference(37);\n\n      i0.ɵɵadvance(19);\n      i0.ɵɵtextInterpolate(ctx.currentPet.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.currentPet.birthDate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.currentPetType.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate2(\"\", ctx.currentOwner.firstName, \" \", ctx.currentOwner.lastName, \"\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"matDatepicker\", _r1)(\"ngModel\", i0.ɵɵpipeBind2(34, 11, ctx.visit.date, \"yyyy-MM-dd\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"for\", _r1);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.visit.description);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.visit.id);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.visit.pet);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm, i4.MatDatepicker, i4.MatDatepickerInput, i4.MatDatepickerToggle, i5.DatePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZpc2l0LWVkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7OztFQWdCRSIsImZpbGUiOiJ2aXNpdC1lZGl0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICpcbiAqICAqIENvcHlyaWdodCAyMDE2LTIwMTcgdGhlIG9yaWdpbmFsIGF1dGhvciBvciBhdXRob3JzLlxuICogICpcbiAqICAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiAgKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiAgKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqICAqXG4gKiAgKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICogICpcbiAqICAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqICAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqICAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKlxuICovXG5cbiJdfQ== */\"]\n});","map":{"version":3,"mappings":";;AA2BA,SAAQA,YAAR,QAA2B,kBAA3B;AACA,SAAQC,cAAR,EAAwBC,MAAxB,QAAqC,iBAArC;AAEA,OAAO,KAAKC,MAAZ,MAAwB,QAAxB;;;;;;;AAOA,WAAaC,kBAAb;EAQE,4BAAoBC,YAApB,EAAwDC,KAAxD,EAAuFC,MAAvF,EAAqG;IAAA;;IAAjF;IAAoC;IAA+B;IAHvF,qBAAgB,KAAhB;IAIE,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKC,cAAL,GAAsB,EAAtB;EACD;;EAbH;IAAA;IAAA,OAeE,oBAAQ;MAAA;;MACN,IAAMC,OAAO,GAAG,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAApB,CAA2BC,EAA3C;MACA,KAAKV,YAAL,CAAkBW,YAAlB,CAA+BJ,OAA/B,EAAwCK,SAAxC,CACE,kBAAQ,EAAG;QACT,KAAI,CAACT,KAAL,GAAaU,QAAb;QAEA,KAAI,CAACT,UAAL,GAAkB,KAAI,CAACD,KAAL,CAAWW,GAA7B;QACA,KAAI,CAACR,cAAL,GAAsB,KAAI,CAACF,UAAL,CAAgBW,IAAtC;QACA,KAAI,CAACV,YAAL,GAAoB,KAAI,CAACD,UAAL,CAAgBY,KAApC;MACD,CAPH,EAQE,eAAK;QAAA,OAAI,KAAI,CAACC,YAAL,GAAoBC,KAAxB;MAAA,CARP;IASD;EA1BH;IAAA;IAAA,OA4BE,kBAASf,KAAT,EAAqB;MAAA;;MACnBA,KAAK,CAACW,GAAN,GAAY,KAAKV,UAAjB,CADmB,CAGnB;;MACAD,KAAK,CAACgB,IAAN,GAAarB,MAAM,CAACK,KAAK,CAACgB,IAAP,CAAN,CAAmBC,MAAnB,CAA0B,YAA1B,CAAb;MAEA,KAAKpB,YAAL,CAAkBqB,WAAlB,CAA8BlB,KAAK,CAACO,EAAN,CAASY,QAAT,EAA9B,EAAmDnB,KAAnD,EAA0DS,SAA1D,CACE,aAAG;QAAA,OAAI,MAAI,CAACW,eAAL,EAAJ;MAAA,CADL,EAEE,eAAK;QAAA,OAAI,MAAI,CAACN,YAAL,GAAoBC,KAAxB;MAAA,CAFP;IAID;EAtCH;IAAA;IAAA,OAwCE,2BAAe;MACb,KAAKhB,MAAL,CAAYsB,QAAZ,CAAqB,CAAC,SAAD,EAAY,KAAKnB,YAAL,CAAkBK,EAA9B,CAArB;IACD;EA1CH;;EAAA;AAAA;;;mBAAaX,oBAAkB0B;AAAA;;;QAAlB1B;EAAkB2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCnB/BL,+BAA6B,CAA7B,EAA6B,KAA7B,EAA6B,CAA7B,EAA6B,CAA7B,EAA6B,IAA7B;MAGQA;MAAUA;MAEdA;MAAGA;MAAGA;MACNA,iCAAmC,CAAnC,EAAmC,OAAnC,EAAmC,CAAnC,EAAmC,IAAnC,EAAmC,CAAnC,EAAmC,IAAnC;MAGQA;MAAIA;MACRA;MAAIA;MAAUA;MACdA;MAAIA;MAAIA;MACRA;MAAIA;MAAKA;MAGXA,4BAAI,EAAJ,EAAI,IAAJ;MACMA;MAAqBA;MACzBA;MAAIA;MAA0BA;MAC9BA;MAAIA;MAAyBA;MAC7BA;MAAIA;MAAwDA;MAKhEA;MAAyCA;QAAAA;;QAAA;;QAAA,OAAYA,uCAAZ;MAAqC,CAArC;MAEvCA,gCAAqC,EAArC,EAAqC,KAArC,EAAqC,CAArC,EAAqC,EAArC,EAAqC,OAArC,EAAqC,CAArC;MAG0CA;MAAIA;MAC1CA;MACEA;;MACAA,8CAAqF,EAArF,EAAqF,gBAArF,EAAqF,IAArF,EAAqF,EAArF;MAEFA;MAEFA,gCAAyB,EAAzB,EAAyB,OAAzB,EAAyB,CAAzB;MACwCA;MAAWA;MACjDA,gCAAuB,EAAvB,EAAuB,OAAvB,EAAuB,EAAvB;MAESA;QAAA;MAAA;MADPA;MAMNA,gCAAwB,EAAxB,EAAwB,KAAxB,EAAwB,EAAxB,EAAwB,EAAxB,EAAwB,OAAxB,EAAwB,EAAxB;MAE2CA;QAAA;MAAA;MAAvCA;MACAA;MAAyCA;QAAA;MAAA;MAAzCA;MACAA;MAA8CA;QAAA,OAASM,qBAAT;MAA0B,CAA1B;MAA4BN;MAAIA;MAC9EA;MAA8CA;MAAYA;;;;;;MAlCxDA;MAAAA;MACAA;MAAAA;MACAA;MAAAA;MACAA;MAAAA;MAYgBA;MAAAA,oCAAqC,SAArC,EAAqCA,oDAArC;MACiBA;MAAAA;MAQ1BA;MAAAA;MAO8BA;MAAAA;MACEA;MAAAA","names":["VisitService","ActivatedRoute","Router","moment","VisitEditComponent","visitService","route","router","visit","currentPet","currentOwner","currentPetType","visitId","snapshot","params","id","getVisitById","subscribe","response","pet","type","owner","errorMessage","error","date","format","updateVisit","toString","gotoOwnerDetail","navigate","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/visits/visit-edit/visit-edit.component.ts","/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/src/app/visits/visit-edit/visit-edit.component.html"],"sourcesContent":["/*\n *\n *  * Copyright 2016-2017 the original author or authors.\n *  *\n *  * Licensed under the Apache License, Version 2.0 (the \"License\");\n *  * you may not use this file except in compliance with the License.\n *  * You may obtain a copy of the License at\n *  *\n *  *      http://www.apache.org/licenses/LICENSE-2.0\n *  *\n *  * Unless required by applicable law or agreed to in writing, software\n *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  * See the License for the specific language governing permissions and\n *  * limitations under the License.\n *\n */\n\n/**\n * @author Vitaliy Fedoriv\n */\n\nimport {Component, OnInit} from '@angular/core';\nimport {Visit} from '../visit';\nimport {Pet} from '../../pets/pet';\nimport {Owner} from '../../owners/owner';\nimport {PetType} from '../../pettypes/pettype';\nimport {VisitService} from '../visit.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-visit-edit',\n  templateUrl: './visit-edit.component.html',\n  styleUrls: ['./visit-edit.component.css']\n})\nexport class VisitEditComponent implements OnInit {\n  visit: Visit;\n  currentPet: Pet;\n  currentOwner: Owner;\n  currentPetType: PetType;\n  updateSuccess = false;\n  errorMessage: string;\n\n  constructor(private visitService: VisitService, private route: ActivatedRoute, private router: Router) {\n    this.visit = {} as Visit;\n    this.currentPet = {} as Pet;\n    this.currentOwner = {} as Owner;\n    this.currentPetType = {} as PetType;\n  }\n\n  ngOnInit() {\n    const visitId = this.route.snapshot.params.id;\n    this.visitService.getVisitById(visitId).subscribe(\n      response => {\n        this.visit = response;\n\n        this.currentPet = this.visit.pet;\n        this.currentPetType = this.currentPet.type;\n        this.currentOwner = this.currentPet.owner;\n      },\n      error => this.errorMessage = error as any);\n  }\n\n  onSubmit(visit: Visit) {\n    visit.pet = this.currentPet;\n\n    // format output from datepicker to short string yyyy/mm/dd format\n    visit.date = moment(visit.date).format('YYYY/MM/DD');\n\n    this.visitService.updateVisit(visit.id.toString(), visit).subscribe(\n      res => this.gotoOwnerDetail(),\n      error => this.errorMessage = error as any);\n\n  }\n\n  gotoOwnerDetail() {\n    this.router.navigate(['/owners', this.currentOwner.id]);\n  }\n\n}\n","<!--\n  ~ /*\n  ~  * Copyright 2016-2017 the original author or authors.\n  ~  *\n  ~  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~  * you may not use this file except in compliance with the License.\n  ~  * You may obtain a copy of the License at\n  ~  *\n  ~  *      http://www.apache.org/licenses/LICENSE-2.0\n  ~  *\n  ~  * Unless required by applicable law or agreed to in writing, software\n  ~  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~  * See the License for the specific language governing permissions and\n  ~  * limitations under the License.\n  ~  */\n  -->\n\n<div class=\"container-fluid\">\n  <div class=\"container xd-container\">\n\n    <h2>Edit Visit</h2>\n\n    <b>Pet</b>\n    <table class=\"table table-striped\">\n      <thead>\n      <tr>\n        <th>Name</th>\n        <th>Birth Date</th>\n        <th>Type</th>\n        <th>Owner</th>\n      </tr>\n      </thead>\n      <tr>\n        <td>{{ currentPet.name }}</td>\n        <td>{{ currentPet.birthDate }}</td>\n        <td>{{ currentPetType.name }}</td>\n        <td>{{ currentOwner.firstName }} {{ currentOwner.lastName }}</td>\n      </tr>\n\n    </table>\n\n    <form id=\"visit\" class=\"form-horizontal\" (ngSubmit)=\"onSubmit(visitForm.value)\" #visitForm=\"ngForm\">\n\n      <div class=\"form-group has-feedback\">\n\n        <div class=\"form-group \">\n          <label class=\"col-sm-2 control-label\">Date</label>\n          <div class=\"col-sm-10\">\n            <input matInput [matDatepicker]=\"visitDateDatepicker\" [ngModel]=\"visit.date | date:'yyyy-MM-dd'\" name=\"date\">\n            <mat-datepicker-toggle matSuffix [for]=\"visitDateDatepicker\"></mat-datepicker-toggle>\n            <mat-datepicker #visitDateDatepicker></mat-datepicker>\n          </div>\n        </div>\n        <div class=\"form-group \">\n          <label class=\"col-sm-2 control-label\">Description</label>\n          <div class=\"col-sm-10\">\n            <input id=\"description\" name=\"description\" class=\"form-control\" type=\"text\"\n                   [(ngModel)]=\"visit.description\"/>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-sm-offset-2 col-sm-10\">\n          <input type=\"hidden\" name=\"id\" id=\"id\" [(ngModel)]=\"visit.id\"/>\n          <input type=\"hidden\" name=\"pet\" id=\"pet\" [(ngModel)]=\"visit.pet\"/>\n          <button class=\"btn btn-default\" type=\"button\" (click)=\"gotoOwnerDetail()\">Back</button>\n          <button class=\"btn btn-default\" type=\"submit\">Update Visit</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module"}