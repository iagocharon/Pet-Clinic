{"ast":null,"code":"import _classCallCheck from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/IAGO/Desktop/Portfolio/Veterinaria/spring-petclinic-angular-master/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { environment } from \"../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { catchError } from \"rxjs\";\nimport { HttpErrorHandler } from \"../error.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../error.service\";\nexport var PetTypeService = /*#__PURE__*/(function () {\n  var PetTypeService = /*#__PURE__*/function () {\n    function PetTypeService(http, httpErrorHandler) {\n      _classCallCheck(this, PetTypeService);\n\n      this.http = http;\n      this.httpErrorHandler = httpErrorHandler;\n      this.entityUrl = environment.REST_API_URL + \"pettypes\";\n      this.handlerError = httpErrorHandler.createHandleError(\"OwnerService\");\n    }\n\n    _createClass(PetTypeService, [{\n      key: \"getPetTypes\",\n      value: function getPetTypes() {\n        return this.http.get(this.entityUrl).pipe(catchError(this.handlerError(\"getPetTypes\", [])));\n      }\n    }, {\n      key: \"getPetTypeById\",\n      value: function getPetTypeById(typeId) {\n        return this.http.get(this.entityUrl + \"/\" + typeId).pipe(catchError(this.handlerError(\"getPetTypeById\", {})));\n      }\n    }, {\n      key: \"updatePetType\",\n      value: function updatePetType(typeId, petType) {\n        return this.http.put(this.entityUrl + \"/\" + typeId, petType).pipe(catchError(this.handlerError(\"updatePetType\", petType)));\n      }\n    }, {\n      key: \"addPetType\",\n      value: function addPetType(petType) {\n        return this.http.post(this.entityUrl, petType).pipe(catchError(this.handlerError(\"addPetType\", petType)));\n      }\n    }, {\n      key: \"deletePetType\",\n      value: function deletePetType(typeId) {\n        return this.http.delete(this.entityUrl + \"/\" + typeId).pipe(catchError(this.handlerError(\"deletePetType\", 0)));\n      }\n    }]);\n\n    return PetTypeService;\n  }();\n\n  PetTypeService.ɵfac = function PetTypeService_Factory(t) {\n    return new (t || PetTypeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.HttpErrorHandler));\n  };\n\n  PetTypeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PetTypeService,\n    factory: PetTypeService.ɵfac\n  });\n  return PetTypeService;\n})();","map":null,"metadata":{},"sourceType":"module"}